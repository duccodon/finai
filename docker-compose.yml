services:
  postgres:
    image: postgres:15-alpine
    container_name: postgres
    restart: unless-stopped
    ports:
      - '5433:5432'
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: user
      POSTGRES_DB: finai_db
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - '6379:6379'
    command: ['redis-server', '--appendonly', 'yes']
    volumes:
      - redis_data:/data

  mongo:
    image: mongo:7
    container_name: mongo
    restart: unless-stopped
    ports:
      - '27017:27017'
    volumes:
      - mongo_data:/data/db
  financial-news-service:
    build: ./services/CrawlerAndSentiment
    container_name: financial-news-service
    ports:
      - '5003:5003'
    depends_on:
      - redis
    volumes:
      - ./services/CrawlerAndSentiment:/app
    networks:
      - default
      - news-scraper-network
  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
      - OLLAMA_PORT=11434
    networks:
      - news-scraper-network
    command: serve
  auth:
    build:
      context: ./services/auth
      dockerfile: Dockerfile.dev
    container_name: auth_service
    ports:
      - '4000:4000'
    env_file:
      - ./services/auth/.env
    volumes:
      - ./services/auth:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
  nginx:
    image: nginx:alpine
    container_name: nginx_gateway
    ports:
      - '8080:80' # map port 8080 của host -> port 80 trong container
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d-empty/:/etc/nginx/conf.d:ro
    depends_on:
      - backtest
      - auth
      - financial-news-service
      - predict
    restart: unless-stopped
  backtest:
    build:
      context: ./services/Backtest
      dockerfile: Dockerfile
    image: finai-backtest
    container_name: backtest-dev
    ports:
      - '5000:5000'
    volumes:
      - ./services/Backtest:/app # bind mount code + .env + requirements.txt
    env_file:
      - ./services/Backtest/.env # load biến từ file .env (MONGO_URI, JWT_SECRET, v.v.)
    command: python -m backtest.app
  predict:
    build:
      context: ./services/_Predict
      dockerfile: Dockerfile
    image: finai-predict
    container_name: predict-dev
    ports:
      - '9000:9000'
    volumes:
      - ./services/_Predict:/app # bind mount code + .env + requirements.txt
    env_file:
      - ./services/_Predict/.env # load biến từ file .env (MONGO_URI, JWT_SECRET, v.v.)
    command: python -m predict.app
networks:
  news-scraper-network:
    driver: bridge
volumes:
  mongo_data:
  pgdata:
  redis_data:
  ollama_data:
